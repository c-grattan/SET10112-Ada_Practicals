module Flipdecrement__flip__num
  use _gnatprove_standard.Main
  use int.Int
  
  val num : int__ref
end

module Flipdecrement__binary
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type binary = <range 0 1>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = binary,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type binary__ref = { mutable binary__content : binary }
  
  function binary__ref_binary__content__projection (a: binary__ref) : binary =
    a.binary__content
  
  meta "model_projection" function binary__ref_binary__content__projection
  
  meta "inline:no" function binary__ref_binary__content__projection
  
  val binary__havoc (x: binary__ref) : unit
    writes { x }
end

module Flipdecrement__binary___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Flipdecrement__binary as Flipdecrement__binary
  
  predicate dynamic_invariant (temp___expr_165: int) (temp___is_init_161: bool) (temp___skip_constant_162: bool) (temp___do_toplevel_163: bool) (temp___do_typ_inv_164: bool) =
    if ((temp___is_init_161 = True) \/
          (Flipdecrement__binary.first <= Flipdecrement__binary.last)) then
      (((Flipdecrement__binary.dynamic_property Flipdecrement__binary.first)
          Flipdecrement__binary.last)
         temp___expr_165)
    else true
  
  val dynamic_invariant (temp___expr_165: int) (temp___is_init_161: bool) (temp___skip_constant_162: bool) (temp___do_toplevel_163: bool) (temp___do_typ_inv_164: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_165 : int))
                      (temp___is_init_161 : bool))
                     (temp___skip_constant_162 : bool))
                    (temp___do_toplevel_163 : bool))
                   (temp___do_typ_inv_164 : bool)) }
  
  predicate default_initial_assumption (temp___expr_166: int) (temp___skip_top_level_167: bool) =
    true
  
  val default_initial_assumption (temp___expr_166: int) (temp___skip_top_level_167: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_166 : int))
                   (temp___skip_top_level_167 : bool)) }
end

module Flipdecrement__flip__num___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Flipdecrement__flip__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use Flipdecrement__flip__num as Flipdecrement__flip__num
  use Flipdecrement__binary___axiom as Flipdecrement__binary___axiom
  use Flipdecrement__binary___axiom as Flipdecrement__binary___axiom
  use Flipdecrement__flip__num___axiom as Flipdecrement__flip__num___axiom
  
  let def (__void_param : unit)
    requires { [#"flipdecrement.ads" 5 0 0] true }
    ensures { [#"flipdecrement.ads" 5 0 0]
              [#"flipdecrement.ads" 6 0 0]
              [@GP_Reason:VC_POSTCONDITION]
              [@GP_Sloc:flipdecrement.ads:6:19]
              [@GP_Shape:pragargs__cmp]
              [@model_vc_post]
              [@GP_Id:0]
              [@comment:	  post => num'Old /= num;                   ^ flipdecrement.ads:6:19:VC_POSTCONDITION]
              [@GP_Sloc:flipdecrement.ads:6:19]
              [@GP_Pretty_Ada:930]
              ((old (Flipdecrement__flip__num.num.int__content))
                 <> (Flipdecrement__flip__num.num.int__content)) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram flipdecrement.ads:5]
      ());
     assume {
       ((((Flipdecrement__binary___axiom.dynamic_invariant
             (Flipdecrement__flip__num.num.int__content))
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram flipdecrement.ads:5]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram flipdecrement.ads:5]
      ());
     ([@GNAT-comment:Assume Pre of the subprogram flipdecrement.ads:5] ());
     (let temp___old_177 = Flipdecrement__flip__num.num.int__content in
      (try
         ([@GP_Sloc:flipdecrement.adb:5:17]
          [#"flipdecrement.adb" 5 0 0]
          (if (([#"flipdecrement.adb" 5 0 0]
                [#"flipdecrement.adb" 5 0 0]
                (([@branch_id=828] Main.spark__branch).bool__content <-
                   ((Flipdecrement__flip__num.num.int__content) = (0 : int))));
               (([@branch_id=828] Main.spark__branch).bool__content)) then
             ([@GP_Sloc:flipdecrement.adb:6:29]
              [#"flipdecrement.adb" 6 0 0]
              [#"flipdecrement.adb" 6 0 0]
              (Flipdecrement__flip__num.num.int__content <- (1 : int)))
           else
             ([@GP_Sloc:flipdecrement.adb:8:37]
              [#"flipdecrement.adb" 8 0 0]
              [#"flipdecrement.adb" 8 0 0]
              (Flipdecrement__flip__num.num.int__content <- (0 : int)))));
         (raise Return__exc)
       with Return__exc -> ()
       end);
      (begin
         ensures { true }
         let _ =
           let _ =
             (temp___old_177 <> (Flipdecrement__flip__num.num.int__content)) in
           () in
         ()
       end)))
end
